{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"admonitions/","title":"Admonitions","text":"<p>This page provides details about the different admonition blocks used in Material for MkDocs.</p>"},{"location":"admonitions/#admonition-block","title":"Admonition block","text":"<p>Admonition blocks are created using <code>!!!</code> followed by the admonition name. Note (<code>note</code>) is the default block provided by Material for MkDocs.</p> Raw MarkdownOutput <pre><code>!!! note\n    This is a normal note.  \n</code></pre> <p>Note</p> <p>This is a normal note.  </p> <p>Other admonition blocks available are <code>info</code>, <code>tip</code>, <code>abstract</code>, <code>success</code>, <code>failure</code>, <code>example</code>, <code>question</code>, <code>warning</code>,  <code>danger</code>, <code>bug</code> and <code>quote</code>.</p>"},{"location":"admonitions/#admonition-block-with-a-title","title":"Admonition block with a title","text":"<p>A title can be added as a string after the admonition name.</p> Raw MarkdownOutput <pre><code>!!! abstract \"This is the abstract title\"\n    This is an abstract with a title.  \n</code></pre> <p>This is the abstract title</p> <p>This is an abstract with a title.  </p>"},{"location":"admonitions/#admonition-block-without-a-title","title":"Admonition block without a title","text":"<p>An admonition block can be created without a title by adding an empty string after the admonition name.</p> Raw MarkdownOutput <pre><code>!!! info \"\"\n    This is an info without a title.  \n</code></pre> <p>This is an info without a title.  </p>"},{"location":"admonitions/#collapsible-blocks","title":"Collapsible blocks","text":"<p>Closed collapsible blocks are created using <code>???</code> instead of <code>!!!</code>.</p> Raw MarkdownOutput <pre><code>??? tip\n    This is a tip as a closed collapsible block.  \n    This requires `pymdownx.details` extension.\n</code></pre> Tip <p>This is a tip as a closed collapsible block. This requires <code>pymdownx.details</code> extension.</p> <p>Open collapsible blocks are created using <code>???+</code>.</p> Raw MarkdownOutput <pre><code>???+ success\n    This is a success as an open collapsible block.  \n    This requires `pymdownx.details` extension.\n</code></pre> Success <p>This is a success as an open collapsible block. This requires <code>pymdownx.details</code> extension.</p>"},{"location":"admonitions/#inline-blocks","title":"Inline blocks","text":"<p>Inline blocks share space with text. </p> <p>They can be aligned to the left by adding <code>inline</code> after the admonition name.</p> Raw MarkdownOutput <pre><code>!!! question inline\n    This is a question as a left inline block.  \nThis is some content alongside the left inline block. It is written straight after the left inline block. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. \n</code></pre> <p>Question<p>This is a question as a left inline block.  </p> </p> <p>This is some content alongside the left inline block. It is written straight after the left inline block. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. </p> <p>They can be aligned to the right by adding <code>inline end</code> after the admonition name.</p> Raw MarkdownOutput <pre><code>!!! warning inline end\n    This is a warning as a right inline block.  \nThis is some content alongside the right inline block. It is written straight after the right inline block. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. \n</code></pre> <p>Warning</p> <p>This is a warning as a right inline block.  </p> <p>This is some content alongside the right inline block. It is written straight after the right inline block. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. </p>"},{"location":"admonitions/#all-admonition-blocks","title":"All admonition blocks","text":""},{"location":"admonitions/#note","title":"Note","text":"Raw MarkdownOutput <pre><code>!!! note\n    This is a note.  \n</code></pre> <p>Note</p> <p>This is a note.  </p>"},{"location":"admonitions/#info","title":"Info","text":"Raw MarkdownOutput <pre><code>!!! info\n    This is an info.  \n</code></pre> <p>Info</p> <p>This is an info.  </p>"},{"location":"admonitions/#tip","title":"Tip","text":"Raw MarkdownOutput <pre><code>!!! tip\n    This is a tip.  \n</code></pre> <p>Tip</p> <p>This is a tip.  </p>"},{"location":"admonitions/#example","title":"Example","text":"Raw MarkdownOutput <pre><code>!!! example\n    This is an example.  \n</code></pre> <p>Example</p> <p>This is an example.  </p>"},{"location":"admonitions/#question","title":"Question","text":"Raw MarkdownOutput <pre><code>!!! question\n    This is a question.  \n</code></pre> <p>Question</p> <p>This is a question.</p>"},{"location":"admonitions/#abstract","title":"Abstract","text":"Raw MarkdownOutput <pre><code>!!! abstract\n    This is an abstract.  \n</code></pre> <p>Abstract</p> <p>This is an abstract.  </p>"},{"location":"admonitions/#success","title":"Success","text":"Raw MarkdownOutput <pre><code>!!! success\n    This is a success.  \n</code></pre> <p>Success</p> <p>This is a success. </p>"},{"location":"admonitions/#failure","title":"Failure","text":"Raw MarkdownOutput <pre><code>!!! failure\n    This is a failure.  \n</code></pre> <p>Failure</p> <p>This is a failure.</p>"},{"location":"admonitions/#warning","title":"Warning","text":"Raw MarkdownOutput <pre><code>!!! warning\n    This is a warning.  \n</code></pre> <p>Warning</p> <p>This is a warning.</p>"},{"location":"admonitions/#danger","title":"Danger","text":"Raw MarkdownOutput <pre><code>!!! danger\n    This is a danger.  \n</code></pre> <p>Danger</p> <p>This is a danger.</p>"},{"location":"admonitions/#bug","title":"Bug","text":"Raw MarkdownOutput <pre><code>!!! bug\n    This is a bug.  \n</code></pre> <p>Bug</p> <p>This is a bug.</p>"},{"location":"admonitions/#quote","title":"Quote","text":"Raw MarkdownOutput <pre><code>!!! quote\n    This is a quote.  \n</code></pre> <p>Quote</p> <p>This is a quote.</p>"},{"location":"code_blocks/","title":"Code Blocks","text":"<p>This page provides details about the different admonition blocks used in MkDocs material.</p>"},{"location":"code_blocks/#copy-button-in-code-blocks","title":"Copy button in code blocks","text":"<p>A copy button can be added to all code blocks by including the following to <code>mkdocs.yml</code>.</p> mkdocs.yml<pre><code>theme:\nfeatures:\n- content.code.copy\n</code></pre> <p>It can also be enabled for specific code blocks by using the syntax shown in the Raw Markdown tab. Note that the language identifier is also inside the brackets and preceded by a <code>.</code>.</p> Raw MarkdownOutput <pre><code>``` { .python .copy }\n# This is a code block with a copy button\na = 5\n```\n</code></pre> <pre><code># This is a code block with a copy button\na = 5\n</code></pre> <p>It can also be disabled for specific code blocks by using the syntax shown in the Raw Markdown tab. Note again that the language identifier is also inside the brackets and preceded by a <code>.</code>.</p> Raw MarkdownOutput <pre><code>``` { .python .no-copy }\n# This is a code block without a copy button\na = 5\n```\n</code></pre> <pre><code># This is a code block without a copy button\na = 5\n</code></pre>"},{"location":"code_blocks/#code-annotations","title":"Code annotations","text":"<p>Code annotations can be added to comments in code blocks. The annotations follow straight after the code block.</p> Raw MarkdownOutput <pre><code>    ```python\n# comment (1)\nprint(\"Hello\")\n# (2)\nprint(\"World\")\n# (3)!\n    ```\n1.  :man_raising_hand: I'm an annotation!\n    2.  This is another annotation!\n    3.  Adding a ! strips the comment in the line.\n</code></pre> <pre><code># comment (1)\nprint(\"Hello\")\n# (2)\nprint(\"World\")\n# (3)!\n</code></pre> <ol> <li> I'm an annotation!</li> <li>This is another annotation!</li> <li>Adding a ! strips the comment in the line. ```</li> </ol> <p>Code annotations can also be placed inside admonition blocks. </p> <p>Note</p> Raw MarkdownOutput <pre><code>    ```python\n# comment (1)\nprint(\"Hello\")\n# (2)\nprint(\"World\")\n# (3)!\n    ```\n1.  :man_raising_hand: I'm an annotation!\n    2.  This is another annotation!\n    3.  Adding a ! strips the comment in the line.\n</code></pre> <pre><code># comment (1)\nprint(\"Hello\")\n# (2)\nprint(\"World\")\n# (3)!\n</code></pre> <ol> <li> I'm an annotation!</li> <li>This is another annotation!</li> <li>Adding a ! strips the comment in the line. ```</li> </ol>"},{"location":"code_blocks/#code-block-title","title":"Code block title","text":"<p>A title can be added to code blocks by adding <code>title=&lt;title&gt;</code> after the language identifier.</p> Raw MarkdownOutput <pre><code>    ```python title=\"hello_world.py\"\n    print(\"Hello World\")\n    ```\n</code></pre> hello_world.py<pre><code>print(\"Hello World\")\n</code></pre>"},{"location":"code_blocks/#line-numbers","title":"Line Numbers","text":"<p>Line numbers can be added to code blocks by adding <code>linenums=\"&lt;start&gt;\"</code> after the language identifier.</p> Raw MarkdownOutput <pre><code>    ```python linenums=\"1\"\n    a = 1\nb = 2\nc = 3\nprint(a+b+c)\n    ```\n</code></pre> <pre><code>a = 1\nb = 2\nc = 3\nprint(a+b+c)\n</code></pre> <p>Line numbers can also start from a number other than 1.</p> Raw MarkdownOutput <pre><code>    ```python linenums=\"6\"\n    a = 1\nb = 2\nc = 3\nprint(a+b+c)\n    ```\n</code></pre> <pre><code>a = 1\nb = 2\nc = 3\nprint(a+b+c)\n</code></pre>"},{"location":"code_blocks/#highlight-specific-lines","title":"Highlight specific lines","text":"<p>Line highlights can be added to code blocks by adding <code>hl_lines = \"n1 n2 n3 ...\"</code> after the language identifier. Line count starts at 1 regardless of the starting line number specified in <code>linenums</code>.</p> Raw MarkdownOutput <pre><code>```python hl_lines=\"1 2 4\"\na = 1\nb = 2\nc = 3\nprint(a+b+c)\n```\n</code></pre> <pre><code>a = 1\nb = 2\nc = 3\nprint(a+b+c)\n</code></pre>"},{"location":"code_blocks/#syntax-highlighting-inline-code-blocks","title":"Syntax highlighting inline code blocks","text":"<p>Inline codeblocks (with single backticks) can be syntax highlighted by prefixing them with a shebang <code>#!</code> directly followed by the corresponding language identifier.</p> Raw MarkdownOutput <pre><code>    Compare the difference between `#!py print(\"Hello World\")` and `print(\"Hello World\")`.\n</code></pre> <p>Compare the difference between <code>print(\"Hello World\")</code> and <code>print(\"Hello World\")</code>.</p>"},{"location":"code_blocks/#tabbed-code-blocks","title":"Tabbed code blocks","text":"<p>Tabbed code blocks are created by using <code>===</code> followed by the tab header followed by indented code blocks.</p> Raw MarkdownOutput <pre><code>=== \"C\"\n\n    ```c\n#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n    ```\n=== \"Python\"\n\n    ```python\nprint(\"Hello world!\")\n    ```\n</code></pre> CPython <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>print(\"Hello world!\")\n</code></pre>"},{"location":"content_tabs/","title":"Content Tabs","text":""},{"location":"content_tabs/#tabbed-blocks","title":"Tabbed blocks","text":"<p>Tabbed blocks are created by using <code>===</code> followed by the tab header followed by indented tab content.</p> Raw MarkdownOutput <pre><code>=== \"Unordered list\"\n\n* Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol>"},{"location":"content_tabs/#tabbed-code-blocks","title":"Tabbed code blocks","text":"<p>Tabbed code blocks are created by using <code>===</code> followed by the tab header followed by indented code blocks.</p> Raw MarkdownOutput <pre><code>=== \"C\"\n\n    ```c\n#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n    ```\n=== \"Python\"\n\n    ```python\nprint(\"Hello world!\")\n    ```\n</code></pre> CPython <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>print(\"Hello world!\")\n</code></pre>"},{"location":"formatting/","title":"Formatting","text":""},{"location":"formatting/#highlighting-changes","title":"Highlighting changes","text":"Raw MarkdownOutput <pre><code>Text can be deleted and replacement text added. This can also be\ncombined into onea single operation. Highlighting is also\npossible and comments can be added inline.\n\nFormatting can also be applied to blocks by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.\n\n</code></pre> <p>Text can be deleted and replacement text added. This can also be combined into onea single operation. Highlighting is also possible and comments can be added inline.</p> <p>Formatting can also be applied to blocks by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.</p>"},{"location":"formatting/#highlighting-text","title":"Highlighting text","text":"Raw MarkdownOutput <pre><code>- ==This was highlighted==\n- ^^This was inserted^^\n- ~~This was deleted~~\n</code></pre> <ul> <li>This was highlighted</li> <li>This was inserted</li> <li>This was deleted</li> </ul>"},{"location":"formatting/#subscripts-and-superscripts","title":"Subscripts and superscripts","text":"<p>Subscripts can be created using tilde (<code>~</code>) and superscripts can be created using caret (<code>^</code>).</p> Raw MarkdownOutput <pre><code>- H~2~O\n- A^T^A\n</code></pre> <ul> <li>H<sub>2</sub>O</li> <li>A<sup>T</sup>A</li> </ul>"},{"location":"formatting/#displaying-keyboard-keys","title":"Displaying keyboard keys","text":"<p>Keyboard keys can be displayed between two <code>++</code>s. See https://facelessuser.github.io/pymdown-extensions/extensions/keys/ for more about keys.</p> Raw MarkdownOutput <pre><code>- ++ctrl+alt+del++\n- ++ctrl+shift+p++\n</code></pre> <ul> <li>Ctrl+Alt+Del</li> <li>Ctrl+Shift+P</li> </ul>"},{"location":"formatting/#emojis","title":"Emojis","text":"Raw MarkdownOutput <pre><code>:smile:\n</code></pre> <p>\ud83d\ude04</p>"},{"location":"formatting/#images","title":"Images","text":""},{"location":"formatting/#center-alignment","title":"Center alignment","text":"<p>Images can be center aligned with HTML using the <code>figure</code> and <code>figcaption</code> tags.</p> Raw MarkdownOutput <pre><code>&lt;figure markdown&gt;\n    ![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n    &lt;figcaption&gt;Image caption&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p> Image caption </p>"},{"location":"formatting/#light-and-dark-mode-toggles","title":"Light and Dark mode toggles","text":"<p>Light and dark mode images can be toggled by appending a <code>#only-light</code> or <code>#only-dark</code> hash fragment to the image URL</p> Raw MarkdownOutput <pre><code>&lt;figure markdown&gt;\n    ![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa#only-light)\n    ![Image title](https://dummyimage.com/600x400/21222c/d5d7e2#only-dark)\n    &lt;figcaption&gt;Light and Dark mode toggle&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p> Light and Dark mode toggle </p>"},{"location":"formatting/#lists","title":"Lists","text":""},{"location":"formatting/#definition-lists","title":"Definition lists","text":"<p>Definition lists (or description lists) can be created as follows:</p> Raw MarkdownOutput <pre><code>`Item 1`\n:   Description of Item 1\n\n`Item 2`\n:   Description of Item 2\n</code></pre> <code>Item 1</code> Description of Item 1 <code>Item 2</code> Description of Item 2"},{"location":"formatting/#task-lists","title":"Task lists","text":"<p>Unordered list items can be prefixed with [ ] to render an unchecked checkbox or [x] to render a checked checkbox.</p> Raw MarkdownOutput <pre><code>- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n- [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [ ] Praesent sed risus massa\n- [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n</code></pre> <ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"formatting/#equations","title":"Equations","text":""},{"location":"formatting/#inline-equations","title":"Inline equations","text":"<p>Inline equation blocks are created between <code>$</code> (same as latex)</p> Raw MarkdownOutput <pre><code>$x^2 + y^2 = z^2$\n</code></pre> <p>\\(x^2 + y^2 = z^2\\)</p>"},{"location":"formatting/#equation-blocks","title":"Equation blocks","text":"<p>Standalone equation blocks are created between <code>$$</code> (same as latex).</p> Raw MarkdownOutput <pre><code>$$\\frac{a}{b} = \\frac{c}{d}$$\n</code></pre> \\[\\frac{a}{b} = \\frac{c}{d}\\]"},{"location":"formatting/#abbreviations","title":"Abbreviations","text":"<p>Abbreviations can be created with <code>*</code> immediately followed by the term or acronym to be associated in square brackets.</p> Raw MarkdownOutput <pre><code>The HTML specification is maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"notebook/","title":"Test notebook","text":"<p>!!! note This is a normal note</p> <pre><code>{note}\nThis is a normal note\n</code></pre> <p>Note</p> <p>This is a normal note</p> <p>Warning</p> <p>This is a warning note</p> In\u00a0[1]: Copied! <pre>print(\"Hello World\")\n</pre> print(\"Hello World\") <pre>Hello World\n</pre> Raw MarkdownOutput <pre><code>=== \"Unordered list\"\n\n* Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> <p>Test</p> Raw MarkdownOutput <pre><code>=== \"C\"\n\n    ```c\n#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n    ```\n=== \"Python\"\n\n    ```python\nprint(\"Hello world!\")\n    ```\n</code></pre> CPython <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>print(\"Hello world!\")\n</code></pre> CPython <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>print(\"Hello world!\")\n</code></pre> In\u00a0[4]: Copied! <pre>import markdown\ntext = \"A link https://google.com\"\nhtml = markdown.markdown(text, extensions=['pymdownx.magiclink'])\n</pre> import markdown text = \"A link https://google.com\" html = markdown.markdown(text, extensions=['pymdownx.magiclink']) <p>{{html}}</p> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[6]: Copied! <pre>md = markdown.Markdown(extensions=['pymdownx.tabbed'])\n</pre> md = markdown.Markdown(extensions=['pymdownx.tabbed']) In\u00a0[8]: Copied! <pre>my_str = '''\n=== \"Tab 1\"\n    Markdown **content**.\n\n    Multiple paragraphs.\n\n=== \"Tab 2\"\n    More Markdown **content**.\n\n    - list item a\n    - list item b\n'''\n</pre> my_str = ''' === \"Tab 1\"     Markdown **content**.      Multiple paragraphs.  === \"Tab 2\"     More Markdown **content**.      - list item a     - list item b ''' In\u00a0[10]: Copied! <pre>md = markdown.Markdown(extensions=['pymdownx.tabbed'])\n</pre> md = markdown.Markdown(extensions=['pymdownx.tabbed']) In\u00a0[12]: Copied! <pre>my_html = md.convert(my_str)\n</pre> my_html = md.convert(my_str) In\u00a0[17]: Copied! <pre>%%html\n/* General environment setup */\nhtml {\n  background-color: black;\n  height: 100%;\n}\nbody {\n  font-size: 120%;\n  width: 100%;\n  padding: 1em 2em;\n  margin: 0 auto;\n  background-color: white;\n  height: 100%;\n}\n\n/* Tab style starts here */\n.tabbed-set {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 1em 0;\n  border-radius: 0.1rem;\n}\n\n.tabbed-set &gt; input {\n  display: none;\n}\n\n.tabbed-set label {\n  width: auto;\n  padding: 0.9375em 1.25em 0.78125em;\n  font-weight: 700;\n  font-size: 0.84em;\n  white-space: nowrap;\n  border-bottom: 0.15rem solid transparent;\n  border-top-left-radius: 0.1rem;\n  border-top-right-radius: 0.1rem;\n  cursor: pointer;\n  transition: background-color 250ms, color 250ms;\n}\n\n.tabbed-set .tabbed-content {\n  width: 100%;\n  display: none;\n  box-shadow: 0 -.05rem #ddd;\n}\n\n.tabbed-set input {\n  position: absolute;\n  opacity: 0;\n}\n\n.tabbed-set input:checked:nth-child(n+1) + label {\n  color: red;\n  border-color: red;\n}\n\n@media screen {\n  .tabbed-set input:nth-child(n+1):checked + label + .tabbed-content {\n    order: 99;\n    display: block;\n  }\n}\n\n@media print {\n  .tabbed-content {\n    display: contents;\n  }\n}\n</pre> %%html /* General environment setup */ html {   background-color: black;   height: 100%; } body {   font-size: 120%;   width: 100%;   padding: 1em 2em;   margin: 0 auto;   background-color: white;   height: 100%; }  /* Tab style starts here */ .tabbed-set {   position: relative;   display: flex;   flex-wrap: wrap;   margin: 1em 0;   border-radius: 0.1rem; }  .tabbed-set &gt; input {   display: none; }  .tabbed-set label {   width: auto;   padding: 0.9375em 1.25em 0.78125em;   font-weight: 700;   font-size: 0.84em;   white-space: nowrap;   border-bottom: 0.15rem solid transparent;   border-top-left-radius: 0.1rem;   border-top-right-radius: 0.1rem;   cursor: pointer;   transition: background-color 250ms, color 250ms; }  .tabbed-set .tabbed-content {   width: 100%;   display: none;   box-shadow: 0 -.05rem #ddd; }  .tabbed-set input {   position: absolute;   opacity: 0; }  .tabbed-set input:checked:nth-child(n+1) + label {   color: red;   border-color: red; }  @media screen {   .tabbed-set input:nth-child(n+1):checked + label + .tabbed-content {     order: 99;     display: block;   } }  @media print {   .tabbed-content {     display: contents;   } }   /* General environment setup */ html {   background-color: black;   height: 100%; } body {   font-size: 120%;   width: 100%;   padding: 1em 2em;   margin: 0 auto;   background-color: white;   height: 100%; }  /* Tab style starts here */ .tabbed-set {   position: relative;   display: flex;   flex-wrap: wrap;   margin: 1em 0;   border-radius: 0.1rem; }  .tabbed-set &gt; input {   display: none; }  .tabbed-set label {   width: auto;   padding: 0.9375em 1.25em 0.78125em;   font-weight: 700;   font-size: 0.84em;   white-space: nowrap;   border-bottom: 0.15rem solid transparent;   border-top-left-radius: 0.1rem;   border-top-right-radius: 0.1rem;   cursor: pointer;   transition: background-color 250ms, color 250ms; }  .tabbed-set .tabbed-content {   width: 100%;   display: none;   box-shadow: 0 -.05rem #ddd; }  .tabbed-set input {   position: absolute;   opacity: 0; }  .tabbed-set input:checked:nth-child(n+1) + label {   color: red;   border-color: red; }  @media screen {   .tabbed-set input:nth-child(n+1):checked + label + .tabbed-content {     order: 99;     display: block;   } }  @media print {   .tabbed-content {     display: contents;   } }   In\u00a0[14]: Copied! <pre>print(my_html)\n</pre> print(my_html) <pre>&lt;div class=\"tabbed-set\" data-tabs=\"2:2\"&gt;&lt;input checked=\"checked\" id=\"__tabbed_2_1\" name=\"__tabbed_2\" type=\"radio\" /&gt;&lt;label for=\"__tabbed_2_1\"&gt;Tab 1&lt;/label&gt;&lt;div class=\"tabbed-content\"&gt;\n&lt;p&gt;Markdown &lt;strong&gt;content&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;Multiple paragraphs.&lt;/p&gt;\n&lt;/div&gt;\n&lt;input id=\"__tabbed_2_2\" name=\"__tabbed_2\" type=\"radio\" /&gt;&lt;label for=\"__tabbed_2_2\"&gt;Tab 2&lt;/label&gt;&lt;div class=\"tabbed-content\"&gt;\n&lt;p&gt;More Markdown &lt;strong&gt;content&lt;/strong&gt;.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;list item a&lt;/li&gt;\n&lt;li&gt;list item b&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n</pre> In\u00a0[18]: Copied! <pre>from IPython.core.display import HTML\ndef css_styling():\n    styles = open(\"/Users/zepp/Documents/test/tabbed.css\", \"r\").read()\n    return HTML(styles)\ncss_styling()\n</pre> from IPython.core.display import HTML def css_styling():     styles = open(\"/Users/zepp/Documents/test/tabbed.css\", \"r\").read()     return HTML(styles) css_styling() Out[18]:  /* General environment setup */ html {     background-color: black;     height: 100%; }  body {     font-size: 120%;     width: 100%;     padding: 1em 2em;     margin: 0 auto;     background-color: white;     height: 100%; }  /* Tab style starts here */ .tabbed-set {     position: relative;     display: flex;     flex-wrap: wrap;     margin: 1em 0;     border-radius: 0.1rem; }  .tabbed-set&gt;input {     display: none; }  .tabbed-set label {     width: auto;     padding: 0.9375em 1.25em 0.78125em;     font-weight: 700;     font-size: 0.84em;     white-space: nowrap;     border-bottom: 0.15rem solid transparent;     border-top-left-radius: 0.1rem;     border-top-right-radius: 0.1rem;     cursor: pointer;     transition: background-color 250ms, color 250ms; }  .tabbed-set .tabbed-content {     width: 100%;     display: none;     box-shadow: 0 -.05rem #ddd; }  .tabbed-set input {     position: absolute;     opacity: 0; }  .tabbed-set input:checked:nth-child(n+1)+label {     color: red;     border-color: red; }  @media screen {     .tabbed-set input:nth-child(n+1):checked+label+.tabbed-content {         order: 99;         display: block;     } }  @media print {     .tabbed-content {         display: contents;     } }  Tab 1 <p>Markdown content.</p> <p>Multiple paragraphs.</p> Tab 2 <p>More Markdown content.</p> <ul> <li>list item a</li> <li>list item b</li> </ul> Tab with a really long title 1 <p>Lorem ipsum ullamco ea aute do sint cupidatat elit nostrud exercitation dolore culpa aliquip nisi commodo nisi qui magna non laborum proident id voluptate in cupidatat duis.</p> Tab with a really long title 2 <p>Lorem ipsum ullamco ea aute do sint cupidatat elit nostrud exercitation dolore culpa aliquip nisi commodo nisi qui magna non laborum proident id voluptate in cupidatat duis.</p> Tab with a really long title 3 <p>Lorem ipsum ullamco ea aute do sint cupidatat elit nostrud exercitation dolore culpa aliquip nisi commodo nisi qui magna non laborum proident id voluptate in cupidatat duis.</p>"},{"location":"notebook/#test-notebook","title":"Test notebook\u00b6","text":"<p>This is a test notebook!</p> <p>$$a^2 + b^2 = c^2$$</p>"},{"location":"videos/","title":"Videos","text":""},{"location":"videos/#mp4-video-as-markdown","title":"MP4 video as markdown","text":""},{"location":"videos/#mov-video-as-markdown","title":"MOV video as markdown","text":""},{"location":"videos/#gif-as-markdown","title":"GIF as markdown","text":""},{"location":"videos/#mp4-video-as-html","title":"MP4 video as html","text":""},{"location":"videos/#mov-video-as-html","title":"MOV video as html","text":""},{"location":"videos/#gif-as-html","title":"GIF as html","text":""}]}